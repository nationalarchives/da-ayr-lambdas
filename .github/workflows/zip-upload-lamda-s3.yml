name: Zip Lambda and upload to S3 bucket
on: [push]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  repository-projects: write
jobs:
  zip-lambda-function:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Zip da-ayr-rest-api lambda function 
      run:  |
        ./package_lambda.sh da-ayr-rest-api  aws_lambda.py
        mv da-ayr-rest-api/aws_lambda.zip da-ayr-rest-api/lambda_rest_api.zip
        cd da-ayr-rest-api
        ls
    - name: Zip da-ayr-rest-api-auth lambda function
      run: |
        ./package_lambda.sh da-ayr-rest-api-auth lambda_function.py 
        mv da-ayr-rest-api-auth/aws_lambda.zip da-ayr-rest-api-auth/lambda_auth.zip
        cd da-ayr-rest-api-auth
        ls
    - name: Login in to Non Prod Account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_S3_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: role-session-name-${{ github.actor }}-${{ github.triggering_actor }}
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ env.AWS_SESSION_TOKEN }}
        role-skip-session-tagging: true
        role-duration-seconds: 1200
    - name: Upload da-ayr-rest api to S3 bucket
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      run: |
        pwd
        cd da-ayr-rest-api
        pwd
        ls
        aws s3 cp lambda_rest_api.zip s3://$AWS_S3_BUCKET/ 
    # aws s3 cp da-ayr-rest-api-auth/lambda_auth.zip s3://$AWS_S3_BUCKET/ 
    - name: Upload da-ayr-rest-api-auth to S3 bucket
      run: |
        cd da-ayr-rest-api-auth
        aws s3 cp ambda_auth.zip s3://$AWS_S3_BUCKET/ 
